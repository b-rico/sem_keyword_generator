import sys
import os
from dotenv import load_dotenv
import pandas as pd

def split_string(string, splits=2, max_len=60):
    """Split `string` into `splits` words, each shorter than `max_len` / `splits`"""
    if len(string) < max_len / splits:
        return string, ''
    str_words = string.split(' ')
    result = ''
    for i, word in enumerate(str_words):
        if len(result + ' ' + word) <= max_len / splits:
            result += word + ' '
        else:
            break
    spaces = result.strip().count(' ')
    result2 = string[string[len(result):].index(word) + len(result):]
    return result.strip(), result2

def process_keyword(keyword):
    # Remove '+' and capitalize the first letter of each word
    cleaned_keyword = ' '.join(word.strip().capitalize() for word in keyword.split('+'))
    return cleaned_keyword

if __name__ == "__main__":
    # Assuming the CSV file generated by keywords.py is located in the /out/ directory
    csv_file_path = sys.argv[1]

    # Load environment variables from the .env file
    load_dotenv()

    # Read short_keyword_phrase from environment variables
    short_keyword_phrase = os.environ.get('short_keyword_phrase')

    # Load the keywords DataFrame
    kwords_df = pd.read_csv(csv_file_path)

    # Process keywords and add headline column
    kwords_df['Headline'] = ''

    for idx, keyword in enumerate(kwords_df['Keyword']):
        if len(keyword) < 30:
            # If keyword is less than 30 characters, use it as headline1, and short_keyword_phrase as headline2
            headline1 = process_keyword(keyword)
            headline2 = process_keyword(short_keyword_phrase)
        else:
            # If keyword is greater than 30 characters, use the split_string function
            split1, split2 = split_string(keyword, splits=2, max_len=60)
            headline1, headline2 = process_keyword(split1), process_keyword(split2)

        # Combine headline1 and headline2 with ' - ' separator
        combined_headline = f"{headline1} - {headline2}"

        # Assign the combined headline to the 'Headline' column
        kwords_df.at[idx, 'Headline'] = combined_headline

    # Save the updated DataFrame to keywords.csv
    kwords_df.to_csv(csv_file_path, index=False)

    print('Step 3 complete, moving on to step 4...\n')
